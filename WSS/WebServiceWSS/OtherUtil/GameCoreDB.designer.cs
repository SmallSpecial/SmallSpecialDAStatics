#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServiceWSS.OtherUtil
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="2011-7-13GameCoreDB")]
	public partial class GameCoreDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertT_BattleZone(T_BattleZone instance);
    partial void UpdateT_BattleZone(T_BattleZone instance);
    partial void DeleteT_BattleZone(T_BattleZone instance);
    partial void InsertT_BattleLine(T_BattleLine instance);
    partial void UpdateT_BattleLine(T_BattleLine instance);
    partial void DeleteT_BattleLine(T_BattleLine instance);
    #endregion
		
		public GameCoreDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["_2011_7_13GameCoreDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_BattleZone> T_BattleZone
		{
			get
			{
				return this.GetTable<T_BattleZone>();
			}
		}
		
		public System.Data.Linq.Table<T_BattleLine> T_BattleLine
		{
			get
			{
				return this.GetTable<T_BattleLine>();
			}
		}
		
		public System.Data.Linq.Table<T_GameServer> T_GameServer
		{
			get
			{
				return this.GetTable<T_GameServer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_BattleZone")]
	public partial class T_BattleZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _F_ZoneID;
		
		private string _F_ZoneName;
		
		private short _F_ZoneState;
		
		private short _F_ZoneLine;
		
		private System.Nullable<short> _F_ZoneAttrib;
		
		private short _F_ChargeType;
		
		private int _F_CurVersion;
		
		private short _F_BigZoneID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_ZoneIDChanging(short value);
    partial void OnF_ZoneIDChanged();
    partial void OnF_ZoneNameChanging(string value);
    partial void OnF_ZoneNameChanged();
    partial void OnF_ZoneStateChanging(short value);
    partial void OnF_ZoneStateChanged();
    partial void OnF_ZoneLineChanging(short value);
    partial void OnF_ZoneLineChanged();
    partial void OnF_ZoneAttribChanging(System.Nullable<short> value);
    partial void OnF_ZoneAttribChanged();
    partial void OnF_ChargeTypeChanging(short value);
    partial void OnF_ChargeTypeChanged();
    partial void OnF_CurVersionChanging(int value);
    partial void OnF_CurVersionChanged();
    partial void OnF_BigZoneIDChanging(short value);
    partial void OnF_BigZoneIDChanged();
    #endregion
		
		public T_BattleZone()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short F_ZoneID
		{
			get
			{
				return this._F_ZoneID;
			}
			set
			{
				if ((this._F_ZoneID != value))
				{
					this.OnF_ZoneIDChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneID = value;
					this.SendPropertyChanged("F_ZoneID");
					this.OnF_ZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneName", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string F_ZoneName
		{
			get
			{
				return this._F_ZoneName;
			}
			set
			{
				if ((this._F_ZoneName != value))
				{
					this.OnF_ZoneNameChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneName = value;
					this.SendPropertyChanged("F_ZoneName");
					this.OnF_ZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneState", DbType="SmallInt NOT NULL")]
		public short F_ZoneState
		{
			get
			{
				return this._F_ZoneState;
			}
			set
			{
				if ((this._F_ZoneState != value))
				{
					this.OnF_ZoneStateChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneState = value;
					this.SendPropertyChanged("F_ZoneState");
					this.OnF_ZoneStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneLine", DbType="SmallInt NOT NULL")]
		public short F_ZoneLine
		{
			get
			{
				return this._F_ZoneLine;
			}
			set
			{
				if ((this._F_ZoneLine != value))
				{
					this.OnF_ZoneLineChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneLine = value;
					this.SendPropertyChanged("F_ZoneLine");
					this.OnF_ZoneLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneAttrib", DbType="SmallInt")]
		public System.Nullable<short> F_ZoneAttrib
		{
			get
			{
				return this._F_ZoneAttrib;
			}
			set
			{
				if ((this._F_ZoneAttrib != value))
				{
					this.OnF_ZoneAttribChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneAttrib = value;
					this.SendPropertyChanged("F_ZoneAttrib");
					this.OnF_ZoneAttribChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ChargeType", DbType="SmallInt NOT NULL")]
		public short F_ChargeType
		{
			get
			{
				return this._F_ChargeType;
			}
			set
			{
				if ((this._F_ChargeType != value))
				{
					this.OnF_ChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._F_ChargeType = value;
					this.SendPropertyChanged("F_ChargeType");
					this.OnF_ChargeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_CurVersion", DbType="Int NOT NULL")]
		public int F_CurVersion
		{
			get
			{
				return this._F_CurVersion;
			}
			set
			{
				if ((this._F_CurVersion != value))
				{
					this.OnF_CurVersionChanging(value);
					this.SendPropertyChanging();
					this._F_CurVersion = value;
					this.SendPropertyChanged("F_CurVersion");
					this.OnF_CurVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_BigZoneID", DbType="SmallInt NOT NULL")]
		public short F_BigZoneID
		{
			get
			{
				return this._F_BigZoneID;
			}
			set
			{
				if ((this._F_BigZoneID != value))
				{
					this.OnF_BigZoneIDChanging(value);
					this.SendPropertyChanging();
					this._F_BigZoneID = value;
					this.SendPropertyChanged("F_BigZoneID");
					this.OnF_BigZoneIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_BattleLine")]
	public partial class T_BattleLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _F_NGSID;
		
		private string _F_Name;
		
		private short _F_ZoneID;
		
		private short _F_MaxUser;
		
		private string _F_Ip;
		
		private short _F_Port;
		
		private short _F_State;
		
		private int _F_DBISID;
		
		private short _F_PingPort;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_NGSIDChanging(int value);
    partial void OnF_NGSIDChanged();
    partial void OnF_NameChanging(string value);
    partial void OnF_NameChanged();
    partial void OnF_ZoneIDChanging(short value);
    partial void OnF_ZoneIDChanged();
    partial void OnF_MaxUserChanging(short value);
    partial void OnF_MaxUserChanged();
    partial void OnF_IpChanging(string value);
    partial void OnF_IpChanged();
    partial void OnF_PortChanging(short value);
    partial void OnF_PortChanged();
    partial void OnF_StateChanging(short value);
    partial void OnF_StateChanged();
    partial void OnF_DBISIDChanging(int value);
    partial void OnF_DBISIDChanged();
    partial void OnF_PingPortChanging(short value);
    partial void OnF_PingPortChanged();
    #endregion
		
		public T_BattleLine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_NGSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int F_NGSID
		{
			get
			{
				return this._F_NGSID;
			}
			set
			{
				if ((this._F_NGSID != value))
				{
					this.OnF_NGSIDChanging(value);
					this.SendPropertyChanging();
					this._F_NGSID = value;
					this.SendPropertyChanged("F_NGSID");
					this.OnF_NGSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Name", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string F_Name
		{
			get
			{
				return this._F_Name;
			}
			set
			{
				if ((this._F_Name != value))
				{
					this.OnF_NameChanging(value);
					this.SendPropertyChanging();
					this._F_Name = value;
					this.SendPropertyChanged("F_Name");
					this.OnF_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneID", DbType="SmallInt NOT NULL")]
		public short F_ZoneID
		{
			get
			{
				return this._F_ZoneID;
			}
			set
			{
				if ((this._F_ZoneID != value))
				{
					this.OnF_ZoneIDChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneID = value;
					this.SendPropertyChanged("F_ZoneID");
					this.OnF_ZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_MaxUser", DbType="SmallInt NOT NULL")]
		public short F_MaxUser
		{
			get
			{
				return this._F_MaxUser;
			}
			set
			{
				if ((this._F_MaxUser != value))
				{
					this.OnF_MaxUserChanging(value);
					this.SendPropertyChanging();
					this._F_MaxUser = value;
					this.SendPropertyChanged("F_MaxUser");
					this.OnF_MaxUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Ip", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string F_Ip
		{
			get
			{
				return this._F_Ip;
			}
			set
			{
				if ((this._F_Ip != value))
				{
					this.OnF_IpChanging(value);
					this.SendPropertyChanging();
					this._F_Ip = value;
					this.SendPropertyChanged("F_Ip");
					this.OnF_IpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Port", DbType="SmallInt NOT NULL")]
		public short F_Port
		{
			get
			{
				return this._F_Port;
			}
			set
			{
				if ((this._F_Port != value))
				{
					this.OnF_PortChanging(value);
					this.SendPropertyChanging();
					this._F_Port = value;
					this.SendPropertyChanged("F_Port");
					this.OnF_PortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_State", DbType="SmallInt NOT NULL")]
		public short F_State
		{
			get
			{
				return this._F_State;
			}
			set
			{
				if ((this._F_State != value))
				{
					this.OnF_StateChanging(value);
					this.SendPropertyChanging();
					this._F_State = value;
					this.SendPropertyChanged("F_State");
					this.OnF_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_DBISID", DbType="Int NOT NULL")]
		public int F_DBISID
		{
			get
			{
				return this._F_DBISID;
			}
			set
			{
				if ((this._F_DBISID != value))
				{
					this.OnF_DBISIDChanging(value);
					this.SendPropertyChanging();
					this._F_DBISID = value;
					this.SendPropertyChanged("F_DBISID");
					this.OnF_DBISIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_PingPort", DbType="SmallInt NOT NULL")]
		public short F_PingPort
		{
			get
			{
				return this._F_PingPort;
			}
			set
			{
				if ((this._F_PingPort != value))
				{
					this.OnF_PingPortChanging(value);
					this.SendPropertyChanging();
					this._F_PingPort = value;
					this.SendPropertyChanged("F_PingPort");
					this.OnF_PingPortChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_GameServer")]
	public partial class T_GameServer
	{
		
		private int _F_GSID;
		
		private string _F_IP;
		
		private string _F_GSNAME;
		
		private int _F_NGSID;
		
		private short _F_ZONEID;
		
		private short _F_CampID;
		
		private string _F_GSSceneID;
		
		public T_GameServer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_GSID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int F_GSID
		{
			get
			{
				return this._F_GSID;
			}
			set
			{
				if ((this._F_GSID != value))
				{
					this._F_GSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_IP", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string F_IP
		{
			get
			{
				return this._F_IP;
			}
			set
			{
				if ((this._F_IP != value))
				{
					this._F_IP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_GSNAME", DbType="Char(16)")]
		public string F_GSNAME
		{
			get
			{
				return this._F_GSNAME;
			}
			set
			{
				if ((this._F_GSNAME != value))
				{
					this._F_GSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_NGSID", DbType="Int NOT NULL")]
		public int F_NGSID
		{
			get
			{
				return this._F_NGSID;
			}
			set
			{
				if ((this._F_NGSID != value))
				{
					this._F_NGSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZONEID", DbType="SmallInt NOT NULL")]
		public short F_ZONEID
		{
			get
			{
				return this._F_ZONEID;
			}
			set
			{
				if ((this._F_ZONEID != value))
				{
					this._F_ZONEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_CampID", DbType="SmallInt NOT NULL")]
		public short F_CampID
		{
			get
			{
				return this._F_CampID;
			}
			set
			{
				if ((this._F_CampID != value))
				{
					this._F_CampID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_GSSceneID", DbType="NChar(400) NOT NULL", CanBeNull=false)]
		public string F_GSSceneID
		{
			get
			{
				return this._F_GSSceneID;
			}
			set
			{
				if ((this._F_GSSceneID != value))
				{
					this._F_GSSceneID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
