#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServiceZoneConfig.OtherUtil
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GameCoreDB")]
	public partial class GameCoreDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertT_BattleZone(T_BattleZone instance);
    partial void UpdateT_BattleZone(T_BattleZone instance);
    partial void DeleteT_BattleZone(T_BattleZone instance);
    partial void InsertT_GameServer(T_GameServer instance);
    partial void UpdateT_GameServer(T_GameServer instance);
    partial void DeleteT_GameServer(T_GameServer instance);
    partial void InsertT_GameConfig(T_GameConfig instance);
    partial void UpdateT_GameConfig(T_GameConfig instance);
    partial void DeleteT_GameConfig(T_GameConfig instance);
    partial void InsertT_GameSimpleVersionList(T_GameSimpleVersionList instance);
    partial void UpdateT_GameSimpleVersionList(T_GameSimpleVersionList instance);
    partial void DeleteT_GameSimpleVersionList(T_GameSimpleVersionList instance);
    partial void InsertT_GameVersionList(T_GameVersionList instance);
    partial void UpdateT_GameVersionList(T_GameVersionList instance);
    partial void DeleteT_GameVersionList(T_GameVersionList instance);
    partial void InsertT_BattleLine(T_BattleLine instance);
    partial void UpdateT_BattleLine(T_BattleLine instance);
    partial void DeleteT_BattleLine(T_BattleLine instance);
    #endregion
		
		public GameCoreDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GameCoreDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameCoreDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_BattleZone> T_BattleZone
		{
			get
			{
				return this.GetTable<T_BattleZone>();
			}
		}
		
		public System.Data.Linq.Table<T_GameServer> T_GameServer
		{
			get
			{
				return this.GetTable<T_GameServer>();
			}
		}
		
		public System.Data.Linq.Table<T_GameConfig> T_GameConfig
		{
			get
			{
				return this.GetTable<T_GameConfig>();
			}
		}
		
		public System.Data.Linq.Table<T_GameSimpleVersionList> T_GameSimpleVersionList
		{
			get
			{
				return this.GetTable<T_GameSimpleVersionList>();
			}
		}
		
		public System.Data.Linq.Table<T_GameVersionList> T_GameVersionList
		{
			get
			{
				return this.GetTable<T_GameVersionList>();
			}
		}
		
		public System.Data.Linq.Table<T_BattleLine> T_BattleLine
		{
			get
			{
				return this.GetTable<T_BattleLine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_BattleZone")]
	public partial class T_BattleZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _F_ZoneID;
		
		private string _F_ZoneName;
		
		private short _F_ZoneState;
		
		private short _F_ZoneLine;
		
		private System.Nullable<short> _F_ZoneAttrib;
		
		private short _F_ChargeType;
		
		private short _F_BigZoneID;
		
		private System.Nullable<int> _F_ServerType;
		
		private System.Nullable<int> _F_FaVersions_Cur;
		
		private System.Nullable<int> _F_ReVersions_Cur;
		
		private System.Nullable<int> _F_FaVersionsLow_And;
		
		private System.Nullable<int> _F_ReVersionsLow_And;
		
		private System.Nullable<int> _F_FaVersionsLow_Ios;
		
		private System.Nullable<int> _F_ReVersionsLow_Ios;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_ZoneIDChanging(short value);
    partial void OnF_ZoneIDChanged();
    partial void OnF_ZoneNameChanging(string value);
    partial void OnF_ZoneNameChanged();
    partial void OnF_ZoneStateChanging(short value);
    partial void OnF_ZoneStateChanged();
    partial void OnF_ZoneLineChanging(short value);
    partial void OnF_ZoneLineChanged();
    partial void OnF_ZoneAttribChanging(System.Nullable<short> value);
    partial void OnF_ZoneAttribChanged();
    partial void OnF_ChargeTypeChanging(short value);
    partial void OnF_ChargeTypeChanged();
    partial void OnF_BigZoneIDChanging(short value);
    partial void OnF_BigZoneIDChanged();
    partial void OnF_ServerTypeChanging(System.Nullable<int> value);
    partial void OnF_ServerTypeChanged();
    partial void OnF_FaVersions_CurChanging(System.Nullable<int> value);
    partial void OnF_FaVersions_CurChanged();
    partial void OnF_ReVersions_CurChanging(System.Nullable<int> value);
    partial void OnF_ReVersions_CurChanged();
    partial void OnF_FaVersionsLow_AndChanging(System.Nullable<int> value);
    partial void OnF_FaVersionsLow_AndChanged();
    partial void OnF_ReVersionsLow_AndChanging(System.Nullable<int> value);
    partial void OnF_ReVersionsLow_AndChanged();
    partial void OnF_FaVersionsLow_IosChanging(System.Nullable<int> value);
    partial void OnF_FaVersionsLow_IosChanged();
    partial void OnF_ReVersionsLow_IosChanging(System.Nullable<int> value);
    partial void OnF_ReVersionsLow_IosChanged();
    #endregion
		
		public T_BattleZone()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short F_ZoneID
		{
			get
			{
				return this._F_ZoneID;
			}
			set
			{
				if ((this._F_ZoneID != value))
				{
					this.OnF_ZoneIDChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneID = value;
					this.SendPropertyChanged("F_ZoneID");
					this.OnF_ZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneName", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string F_ZoneName
		{
			get
			{
				return this._F_ZoneName;
			}
			set
			{
				if ((this._F_ZoneName != value))
				{
					this.OnF_ZoneNameChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneName = value;
					this.SendPropertyChanged("F_ZoneName");
					this.OnF_ZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneState", DbType="SmallInt NOT NULL")]
		public short F_ZoneState
		{
			get
			{
				return this._F_ZoneState;
			}
			set
			{
				if ((this._F_ZoneState != value))
				{
					this.OnF_ZoneStateChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneState = value;
					this.SendPropertyChanged("F_ZoneState");
					this.OnF_ZoneStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneLine", DbType="SmallInt NOT NULL")]
		public short F_ZoneLine
		{
			get
			{
				return this._F_ZoneLine;
			}
			set
			{
				if ((this._F_ZoneLine != value))
				{
					this.OnF_ZoneLineChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneLine = value;
					this.SendPropertyChanged("F_ZoneLine");
					this.OnF_ZoneLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneAttrib", DbType="SmallInt")]
		public System.Nullable<short> F_ZoneAttrib
		{
			get
			{
				return this._F_ZoneAttrib;
			}
			set
			{
				if ((this._F_ZoneAttrib != value))
				{
					this.OnF_ZoneAttribChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneAttrib = value;
					this.SendPropertyChanged("F_ZoneAttrib");
					this.OnF_ZoneAttribChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ChargeType", DbType="SmallInt NOT NULL")]
		public short F_ChargeType
		{
			get
			{
				return this._F_ChargeType;
			}
			set
			{
				if ((this._F_ChargeType != value))
				{
					this.OnF_ChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._F_ChargeType = value;
					this.SendPropertyChanged("F_ChargeType");
					this.OnF_ChargeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_BigZoneID", DbType="SmallInt NOT NULL")]
		public short F_BigZoneID
		{
			get
			{
				return this._F_BigZoneID;
			}
			set
			{
				if ((this._F_BigZoneID != value))
				{
					this.OnF_BigZoneIDChanging(value);
					this.SendPropertyChanging();
					this._F_BigZoneID = value;
					this.SendPropertyChanged("F_BigZoneID");
					this.OnF_BigZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ServerType")]
		public System.Nullable<int> F_ServerType
		{
			get
			{
				return this._F_ServerType;
			}
			set
			{
				if ((this._F_ServerType != value))
				{
					this.OnF_ServerTypeChanging(value);
					this.SendPropertyChanging();
					this._F_ServerType = value;
					this.SendPropertyChanged("F_ServerType");
					this.OnF_ServerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FaVersions_Cur")]
		public System.Nullable<int> F_FaVersions_Cur
		{
			get
			{
				return this._F_FaVersions_Cur;
			}
			set
			{
				if ((this._F_FaVersions_Cur != value))
				{
					this.OnF_FaVersions_CurChanging(value);
					this.SendPropertyChanging();
					this._F_FaVersions_Cur = value;
					this.SendPropertyChanged("F_FaVersions_Cur");
					this.OnF_FaVersions_CurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ReVersions_Cur")]
		public System.Nullable<int> F_ReVersions_Cur
		{
			get
			{
				return this._F_ReVersions_Cur;
			}
			set
			{
				if ((this._F_ReVersions_Cur != value))
				{
					this.OnF_ReVersions_CurChanging(value);
					this.SendPropertyChanging();
					this._F_ReVersions_Cur = value;
					this.SendPropertyChanged("F_ReVersions_Cur");
					this.OnF_ReVersions_CurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FaVersionsLow_And")]
		public System.Nullable<int> F_FaVersionsLow_And
		{
			get
			{
				return this._F_FaVersionsLow_And;
			}
			set
			{
				if ((this._F_FaVersionsLow_And != value))
				{
					this.OnF_FaVersionsLow_AndChanging(value);
					this.SendPropertyChanging();
					this._F_FaVersionsLow_And = value;
					this.SendPropertyChanged("F_FaVersionsLow_And");
					this.OnF_FaVersionsLow_AndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ReVersionsLow_And")]
		public System.Nullable<int> F_ReVersionsLow_And
		{
			get
			{
				return this._F_ReVersionsLow_And;
			}
			set
			{
				if ((this._F_ReVersionsLow_And != value))
				{
					this.OnF_ReVersionsLow_AndChanging(value);
					this.SendPropertyChanging();
					this._F_ReVersionsLow_And = value;
					this.SendPropertyChanged("F_ReVersionsLow_And");
					this.OnF_ReVersionsLow_AndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FaVersionsLow_Ios")]
		public System.Nullable<int> F_FaVersionsLow_Ios
		{
			get
			{
				return this._F_FaVersionsLow_Ios;
			}
			set
			{
				if ((this._F_FaVersionsLow_Ios != value))
				{
					this.OnF_FaVersionsLow_IosChanging(value);
					this.SendPropertyChanging();
					this._F_FaVersionsLow_Ios = value;
					this.SendPropertyChanged("F_FaVersionsLow_Ios");
					this.OnF_FaVersionsLow_IosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ReVersionsLow_Ios")]
		public System.Nullable<int> F_ReVersionsLow_Ios
		{
			get
			{
				return this._F_ReVersionsLow_Ios;
			}
			set
			{
				if ((this._F_ReVersionsLow_Ios != value))
				{
					this.OnF_ReVersionsLow_IosChanging(value);
					this.SendPropertyChanging();
					this._F_ReVersionsLow_Ios = value;
					this.SendPropertyChanged("F_ReVersionsLow_Ios");
					this.OnF_ReVersionsLow_IosChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_GameServer")]
	public partial class T_GameServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _F_GSID;
		
		private string _F_IP;
		
		private string _F_GSNAME;
		
		private int _F_NGSID;
		
		private short _F_ZONEID;
		
		private short _F_CampID;
		
		private string _F_GSSceneID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_GSIDChanging(int value);
    partial void OnF_GSIDChanged();
    partial void OnF_IPChanging(string value);
    partial void OnF_IPChanged();
    partial void OnF_GSNAMEChanging(string value);
    partial void OnF_GSNAMEChanged();
    partial void OnF_NGSIDChanging(int value);
    partial void OnF_NGSIDChanged();
    partial void OnF_ZONEIDChanging(short value);
    partial void OnF_ZONEIDChanged();
    partial void OnF_CampIDChanging(short value);
    partial void OnF_CampIDChanged();
    partial void OnF_GSSceneIDChanging(string value);
    partial void OnF_GSSceneIDChanged();
    #endregion
		
		public T_GameServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_GSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int F_GSID
		{
			get
			{
				return this._F_GSID;
			}
			set
			{
				if ((this._F_GSID != value))
				{
					this.OnF_GSIDChanging(value);
					this.SendPropertyChanging();
					this._F_GSID = value;
					this.SendPropertyChanged("F_GSID");
					this.OnF_GSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_IP", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string F_IP
		{
			get
			{
				return this._F_IP;
			}
			set
			{
				if ((this._F_IP != value))
				{
					this.OnF_IPChanging(value);
					this.SendPropertyChanging();
					this._F_IP = value;
					this.SendPropertyChanged("F_IP");
					this.OnF_IPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_GSNAME", DbType="Char(16)")]
		public string F_GSNAME
		{
			get
			{
				return this._F_GSNAME;
			}
			set
			{
				if ((this._F_GSNAME != value))
				{
					this.OnF_GSNAMEChanging(value);
					this.SendPropertyChanging();
					this._F_GSNAME = value;
					this.SendPropertyChanged("F_GSNAME");
					this.OnF_GSNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_NGSID", DbType="Int NOT NULL")]
		public int F_NGSID
		{
			get
			{
				return this._F_NGSID;
			}
			set
			{
				if ((this._F_NGSID != value))
				{
					this.OnF_NGSIDChanging(value);
					this.SendPropertyChanging();
					this._F_NGSID = value;
					this.SendPropertyChanged("F_NGSID");
					this.OnF_NGSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZONEID", DbType="SmallInt NOT NULL")]
		public short F_ZONEID
		{
			get
			{
				return this._F_ZONEID;
			}
			set
			{
				if ((this._F_ZONEID != value))
				{
					this.OnF_ZONEIDChanging(value);
					this.SendPropertyChanging();
					this._F_ZONEID = value;
					this.SendPropertyChanged("F_ZONEID");
					this.OnF_ZONEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_CampID", DbType="SmallInt NOT NULL")]
		public short F_CampID
		{
			get
			{
				return this._F_CampID;
			}
			set
			{
				if ((this._F_CampID != value))
				{
					this.OnF_CampIDChanging(value);
					this.SendPropertyChanging();
					this._F_CampID = value;
					this.SendPropertyChanged("F_CampID");
					this.OnF_CampIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_GSSceneID", DbType="NChar(400) NOT NULL", CanBeNull=false)]
		public string F_GSSceneID
		{
			get
			{
				return this._F_GSSceneID;
			}
			set
			{
				if ((this._F_GSSceneID != value))
				{
					this.OnF_GSSceneIDChanging(value);
					this.SendPropertyChanging();
					this._F_GSSceneID = value;
					this.SendPropertyChanged("F_GSSceneID");
					this.OnF_GSSceneIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_GameConfig")]
	public partial class T_GameConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _F_Key;
		
		private string _F_Describe;
		
		private string _F_Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_KeyChanging(string value);
    partial void OnF_KeyChanged();
    partial void OnF_DescribeChanging(string value);
    partial void OnF_DescribeChanged();
    partial void OnF_ValueChanging(string value);
    partial void OnF_ValueChanged();
    #endregion
		
		public T_GameConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Key", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string F_Key
		{
			get
			{
				return this._F_Key;
			}
			set
			{
				if ((this._F_Key != value))
				{
					this.OnF_KeyChanging(value);
					this.SendPropertyChanging();
					this._F_Key = value;
					this.SendPropertyChanged("F_Key");
					this.OnF_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Describe", DbType="Char(256)")]
		public string F_Describe
		{
			get
			{
				return this._F_Describe;
			}
			set
			{
				if ((this._F_Describe != value))
				{
					this.OnF_DescribeChanging(value);
					this.SendPropertyChanging();
					this._F_Describe = value;
					this.SendPropertyChanged("F_Describe");
					this.OnF_DescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Value", DbType="Char(256) NOT NULL", CanBeNull=false)]
		public string F_Value
		{
			get
			{
				return this._F_Value;
			}
			set
			{
				if ((this._F_Value != value))
				{
					this.OnF_ValueChanging(value);
					this.SendPropertyChanging();
					this._F_Value = value;
					this.SendPropertyChanged("F_Value");
					this.OnF_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_GameSimpleVersionList")]
	public partial class T_GameSimpleVersionList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _F_ID;
		
		private short _F_CURVERSION;
		
		private short _F_LOWVERSION;
		
		private int _F_UPFILESIZE;
		
		private int _F_DOWNFILESIZE;
		
		private string _F_FILENAME;
		
		private System.DateTime _F_TIME;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_IDChanging(int value);
    partial void OnF_IDChanged();
    partial void OnF_CURVERSIONChanging(short value);
    partial void OnF_CURVERSIONChanged();
    partial void OnF_LOWVERSIONChanging(short value);
    partial void OnF_LOWVERSIONChanged();
    partial void OnF_UPFILESIZEChanging(int value);
    partial void OnF_UPFILESIZEChanged();
    partial void OnF_DOWNFILESIZEChanging(int value);
    partial void OnF_DOWNFILESIZEChanged();
    partial void OnF_FILENAMEChanging(string value);
    partial void OnF_FILENAMEChanged();
    partial void OnF_TIMEChanging(System.DateTime value);
    partial void OnF_TIMEChanged();
    #endregion
		
		public T_GameSimpleVersionList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int F_ID
		{
			get
			{
				return this._F_ID;
			}
			set
			{
				if ((this._F_ID != value))
				{
					this.OnF_IDChanging(value);
					this.SendPropertyChanging();
					this._F_ID = value;
					this.SendPropertyChanged("F_ID");
					this.OnF_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_CURVERSION", DbType="SmallInt NOT NULL")]
		public short F_CURVERSION
		{
			get
			{
				return this._F_CURVERSION;
			}
			set
			{
				if ((this._F_CURVERSION != value))
				{
					this.OnF_CURVERSIONChanging(value);
					this.SendPropertyChanging();
					this._F_CURVERSION = value;
					this.SendPropertyChanged("F_CURVERSION");
					this.OnF_CURVERSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_LOWVERSION", DbType="SmallInt NOT NULL")]
		public short F_LOWVERSION
		{
			get
			{
				return this._F_LOWVERSION;
			}
			set
			{
				if ((this._F_LOWVERSION != value))
				{
					this.OnF_LOWVERSIONChanging(value);
					this.SendPropertyChanging();
					this._F_LOWVERSION = value;
					this.SendPropertyChanged("F_LOWVERSION");
					this.OnF_LOWVERSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_UPFILESIZE", DbType="Int NOT NULL")]
		public int F_UPFILESIZE
		{
			get
			{
				return this._F_UPFILESIZE;
			}
			set
			{
				if ((this._F_UPFILESIZE != value))
				{
					this.OnF_UPFILESIZEChanging(value);
					this.SendPropertyChanging();
					this._F_UPFILESIZE = value;
					this.SendPropertyChanged("F_UPFILESIZE");
					this.OnF_UPFILESIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_DOWNFILESIZE", DbType="Int NOT NULL")]
		public int F_DOWNFILESIZE
		{
			get
			{
				return this._F_DOWNFILESIZE;
			}
			set
			{
				if ((this._F_DOWNFILESIZE != value))
				{
					this.OnF_DOWNFILESIZEChanging(value);
					this.SendPropertyChanging();
					this._F_DOWNFILESIZE = value;
					this.SendPropertyChanged("F_DOWNFILESIZE");
					this.OnF_DOWNFILESIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FILENAME", DbType="NVarChar(50)")]
		public string F_FILENAME
		{
			get
			{
				return this._F_FILENAME;
			}
			set
			{
				if ((this._F_FILENAME != value))
				{
					this.OnF_FILENAMEChanging(value);
					this.SendPropertyChanging();
					this._F_FILENAME = value;
					this.SendPropertyChanged("F_FILENAME");
					this.OnF_FILENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_TIME", DbType="SmallDateTime NOT NULL")]
		public System.DateTime F_TIME
		{
			get
			{
				return this._F_TIME;
			}
			set
			{
				if ((this._F_TIME != value))
				{
					this.OnF_TIMEChanging(value);
					this.SendPropertyChanging();
					this._F_TIME = value;
					this.SendPropertyChanged("F_TIME");
					this.OnF_TIMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_GameVersionList")]
	public partial class T_GameVersionList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _F_ID;
		
		private short _F_CURVERSION;
		
		private short _F_LOWVERSION;
		
		private int _F_UPFILESIZE;
		
		private int _F_DOWNFILESIZE;
		
		private string _F_FILENAME;
		
		private System.DateTime _F_TIME;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_IDChanging(int value);
    partial void OnF_IDChanged();
    partial void OnF_CURVERSIONChanging(short value);
    partial void OnF_CURVERSIONChanged();
    partial void OnF_LOWVERSIONChanging(short value);
    partial void OnF_LOWVERSIONChanged();
    partial void OnF_UPFILESIZEChanging(int value);
    partial void OnF_UPFILESIZEChanged();
    partial void OnF_DOWNFILESIZEChanging(int value);
    partial void OnF_DOWNFILESIZEChanged();
    partial void OnF_FILENAMEChanging(string value);
    partial void OnF_FILENAMEChanged();
    partial void OnF_TIMEChanging(System.DateTime value);
    partial void OnF_TIMEChanged();
    #endregion
		
		public T_GameVersionList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int F_ID
		{
			get
			{
				return this._F_ID;
			}
			set
			{
				if ((this._F_ID != value))
				{
					this.OnF_IDChanging(value);
					this.SendPropertyChanging();
					this._F_ID = value;
					this.SendPropertyChanged("F_ID");
					this.OnF_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_CURVERSION", DbType="SmallInt NOT NULL")]
		public short F_CURVERSION
		{
			get
			{
				return this._F_CURVERSION;
			}
			set
			{
				if ((this._F_CURVERSION != value))
				{
					this.OnF_CURVERSIONChanging(value);
					this.SendPropertyChanging();
					this._F_CURVERSION = value;
					this.SendPropertyChanged("F_CURVERSION");
					this.OnF_CURVERSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_LOWVERSION", DbType="SmallInt NOT NULL")]
		public short F_LOWVERSION
		{
			get
			{
				return this._F_LOWVERSION;
			}
			set
			{
				if ((this._F_LOWVERSION != value))
				{
					this.OnF_LOWVERSIONChanging(value);
					this.SendPropertyChanging();
					this._F_LOWVERSION = value;
					this.SendPropertyChanged("F_LOWVERSION");
					this.OnF_LOWVERSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_UPFILESIZE", DbType="Int NOT NULL")]
		public int F_UPFILESIZE
		{
			get
			{
				return this._F_UPFILESIZE;
			}
			set
			{
				if ((this._F_UPFILESIZE != value))
				{
					this.OnF_UPFILESIZEChanging(value);
					this.SendPropertyChanging();
					this._F_UPFILESIZE = value;
					this.SendPropertyChanged("F_UPFILESIZE");
					this.OnF_UPFILESIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_DOWNFILESIZE", DbType="Int NOT NULL")]
		public int F_DOWNFILESIZE
		{
			get
			{
				return this._F_DOWNFILESIZE;
			}
			set
			{
				if ((this._F_DOWNFILESIZE != value))
				{
					this.OnF_DOWNFILESIZEChanging(value);
					this.SendPropertyChanging();
					this._F_DOWNFILESIZE = value;
					this.SendPropertyChanged("F_DOWNFILESIZE");
					this.OnF_DOWNFILESIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FILENAME", DbType="NVarChar(50)")]
		public string F_FILENAME
		{
			get
			{
				return this._F_FILENAME;
			}
			set
			{
				if ((this._F_FILENAME != value))
				{
					this.OnF_FILENAMEChanging(value);
					this.SendPropertyChanging();
					this._F_FILENAME = value;
					this.SendPropertyChanged("F_FILENAME");
					this.OnF_FILENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_TIME", DbType="SmallDateTime NOT NULL")]
		public System.DateTime F_TIME
		{
			get
			{
				return this._F_TIME;
			}
			set
			{
				if ((this._F_TIME != value))
				{
					this.OnF_TIMEChanging(value);
					this.SendPropertyChanging();
					this._F_TIME = value;
					this.SendPropertyChanged("F_TIME");
					this.OnF_TIMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_BattleLine")]
	public partial class T_BattleLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _F_NGSID;
		
		private string _F_Name;
		
		private short _F_ZoneID;
		
		private short _F_MaxUser;
		
		private string _F_Ip;
		
		private short _F_Port;
		
		private short _F_Main_State;
		
		private short _F_Sub_State;
		
		private int _F_DBISID;
		
		private short _F_PingPort;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_NGSIDChanging(int value);
    partial void OnF_NGSIDChanged();
    partial void OnF_NameChanging(string value);
    partial void OnF_NameChanged();
    partial void OnF_ZoneIDChanging(short value);
    partial void OnF_ZoneIDChanged();
    partial void OnF_MaxUserChanging(short value);
    partial void OnF_MaxUserChanged();
    partial void OnF_IpChanging(string value);
    partial void OnF_IpChanged();
    partial void OnF_PortChanging(short value);
    partial void OnF_PortChanged();
    partial void OnF_Main_StateChanging(short value);
    partial void OnF_Main_StateChanged();
    partial void OnF_Sub_StateChanging(short value);
    partial void OnF_Sub_StateChanged();
    partial void OnF_DBISIDChanging(int value);
    partial void OnF_DBISIDChanged();
    partial void OnF_PingPortChanging(short value);
    partial void OnF_PingPortChanged();
    #endregion
		
		public T_BattleLine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_NGSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int F_NGSID
		{
			get
			{
				return this._F_NGSID;
			}
			set
			{
				if ((this._F_NGSID != value))
				{
					this.OnF_NGSIDChanging(value);
					this.SendPropertyChanging();
					this._F_NGSID = value;
					this.SendPropertyChanged("F_NGSID");
					this.OnF_NGSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Name", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string F_Name
		{
			get
			{
				return this._F_Name;
			}
			set
			{
				if ((this._F_Name != value))
				{
					this.OnF_NameChanging(value);
					this.SendPropertyChanging();
					this._F_Name = value;
					this.SendPropertyChanged("F_Name");
					this.OnF_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_ZoneID", DbType="SmallInt NOT NULL")]
		public short F_ZoneID
		{
			get
			{
				return this._F_ZoneID;
			}
			set
			{
				if ((this._F_ZoneID != value))
				{
					this.OnF_ZoneIDChanging(value);
					this.SendPropertyChanging();
					this._F_ZoneID = value;
					this.SendPropertyChanged("F_ZoneID");
					this.OnF_ZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_MaxUser", DbType="SmallInt NOT NULL")]
		public short F_MaxUser
		{
			get
			{
				return this._F_MaxUser;
			}
			set
			{
				if ((this._F_MaxUser != value))
				{
					this.OnF_MaxUserChanging(value);
					this.SendPropertyChanging();
					this._F_MaxUser = value;
					this.SendPropertyChanged("F_MaxUser");
					this.OnF_MaxUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Ip", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string F_Ip
		{
			get
			{
				return this._F_Ip;
			}
			set
			{
				if ((this._F_Ip != value))
				{
					this.OnF_IpChanging(value);
					this.SendPropertyChanging();
					this._F_Ip = value;
					this.SendPropertyChanged("F_Ip");
					this.OnF_IpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Port", DbType="SmallInt NOT NULL")]
		public short F_Port
		{
			get
			{
				return this._F_Port;
			}
			set
			{
				if ((this._F_Port != value))
				{
					this.OnF_PortChanging(value);
					this.SendPropertyChanging();
					this._F_Port = value;
					this.SendPropertyChanged("F_Port");
					this.OnF_PortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Main_State", DbType="SmallInt NOT NULL")]
		public short F_Main_State
		{
			get
			{
				return this._F_Main_State;
			}
			set
			{
				if ((this._F_Main_State != value))
				{
					this.OnF_Main_StateChanging(value);
					this.SendPropertyChanging();
					this._F_Main_State = value;
					this.SendPropertyChanged("F_Main_State");
					this.OnF_Main_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Sub_State", DbType="SmallInt NOT NULL")]
		public short F_Sub_State
		{
			get
			{
				return this._F_Sub_State;
			}
			set
			{
				if ((this._F_Sub_State != value))
				{
					this.OnF_Sub_StateChanging(value);
					this.SendPropertyChanging();
					this._F_Sub_State = value;
					this.SendPropertyChanged("F_Sub_State");
					this.OnF_Sub_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_DBISID", DbType="Int NOT NULL")]
		public int F_DBISID
		{
			get
			{
				return this._F_DBISID;
			}
			set
			{
				if ((this._F_DBISID != value))
				{
					this.OnF_DBISIDChanging(value);
					this.SendPropertyChanging();
					this._F_DBISID = value;
					this.SendPropertyChanged("F_DBISID");
					this.OnF_DBISIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_PingPort", DbType="SmallInt NOT NULL")]
		public short F_PingPort
		{
			get
			{
				return this._F_PingPort;
			}
			set
			{
				if ((this._F_PingPort != value))
				{
					this.OnF_PingPortChanging(value);
					this.SendPropertyChanging();
					this._F_PingPort = value;
					this.SendPropertyChanged("F_PingPort");
					this.OnF_PingPortChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
